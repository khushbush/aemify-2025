name: Fetch Release Tag, Generate Diff, and Notify Teams

on:
  pull_request:
    types: [opened, synchronize, reopened]  # Trigger on PR open, update, or reopen

jobs:
  fetch-sync-and-diff:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the target repository (the one you want to push the tag to)
      - name: Checkout target repository
        uses: actions/checkout@v2

        # Step 2: Set up Git for pushing tags
      - name: Set up Git
        run: |
          git config --global user.name "khushbush"
          git config --global user.email "khushbu.k.shukla@gmail.com"

      # Step 3: Add the source repository as a remote to fetch the release tag
      - name: Add source repository remote
        run: |
          # Add the source repository URL where the release tag is generated
          git remote add source-repo https://khushbukrishnanand-shukla-concentrix-com:2ogfswLL5gQ1Ah8MA1Pw8QhLAJQnhDgZfnxMQrXxYaR67cWU2cz6JQQJ99BCACAAAAAFjjIdAAASAZDO2sVf@git.cloudmanager.adobe.com/prokarmaptrsd/providence-poc/
          git fetch source-repo --tags  # Fetch all tags from the source repository
  # Step 4: Get the latest release tag
      - name: Get the latest release tag
        id: get_release_tag
        run: |
          TAG_NAME=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest release tag: $TAG_NAME"
          echo "::set-output name=tag_name::$TAG_NAME"  # Store the latest release tag

      # Step 5: Generate the diff between the latest release tag and current commit (HEAD)
      - name: Generate diff between latest release tag and current commit
        id: generate_diff
        run: |
          TAG_NAME=${{ steps.get_release_tag.outputs.tag_name }}
          
          # Ensure that the repository is up to date with the latest changes
          git fetch --all

          # Generate the diff between the latest release tag and current commit (HEAD)
          git diff "$TAG_NAME" HEAD > diff.txt

          # Print the content of diff.txt to the GitHub Actions logs
          echo "Contents of diff.txt:"
          cat diff.txt

          # Check if the diff is not empty
          if [ ! -s diff.txt ]; then
            echo "No differences found between the release tag $TAG_NAME and the current commit."
            exit 1
          else
            echo "Differences found and saved to diff.txt"
          fi
